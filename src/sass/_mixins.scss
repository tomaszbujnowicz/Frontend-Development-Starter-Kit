/**
 * Mixins
 */

/**
 * Clearfix
 * Usage:
   @include clearfix;
 */

@mixin clearfix() {
 &::after {
   display: block;
   clear: both;
   content: "";
 }
}

/**
 * Unstyled keeps list items block level, just removes default browser padding and list-style.
 * Usage:
   @include list-none;
 */

@mixin list-none {
  list-style: none;
  padding-left: 0;
}

/**
 * Overlay
 * Usage
   @include overlay();
 */

@mixin overlay() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/**
 * Inut Placeholder
 * Usage:
   input {
     @include input-placeholder {
       color: $grey;
     }
   }
 */

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

/**
 * Pseudo elements after / before
 * Usage
   @include pseudo;
 */

@mixin pseudo($display: block, $position: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $position;
}

/**
 * Set max width for an element and make it centered
 * Usage
   @include max-width(600px);
 */

@mixin max-width($max-width) {
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;
}

/**
  * https://github.com/nicholasruggeri/px-to-rem-sass-mixin
  * Usage
  font-size: rem(20)
  margin: rem(40) rem(40);
 */

@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}
@function rem($pxval) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  $base: 16px;
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem;
}

/**
 * Responsive font size for different media query breakpoints
 * Usage
   @include responsive-font-size(12px, 14px, 16px, 18px, 20px);
   @include responsive-font-size(xs, sm, md, lg, xl);
 * In case you want to omit the media query breakpoint please use ''
   e.g. @include responsive-font-size(1rem, '', '', 1.5rem, '', 2.5rem);
 */

@mixin responsive-font-size($font-size-xs: null, $font-size-sm: null, $font-size-md: null, $font-size-lg: null, $font-size-xl: null) {
  @if ($font-size-xs != '') {
    font-size: $font-size-xs;
  }
  @if ($font-size-sm != '') {
    @include media-breakpoint-up(sm) {
      font-size: $font-size-sm;
    }
  }
  @if ($font-size-md != '') {
    @include media-breakpoint-up(md) {
      font-size: $font-size-md;
    }
  }
  @if ($font-size-lg != '') {
    @include media-breakpoint-up(lg) {
      font-size: $font-size-lg;
    }
  }
  @if ($font-size-xl != '') {
    @include media-breakpoint-up(xl) {
      font-size: $font-size-xl;
    }
  }
}

/**
 * Responsive spacing for different media query breakpoints
 * Usage
   @include responsive-space('mb', 10px, 20px, 30px, 40px, 50px);
   @include responsive-space('type, xs, sm, md, lg, xl);

 * In case you want to omit the media query breakpoint please use ''
   e.g. @include responsive-space('mb', 10px, '', '', 40px, 50px);

   type:
   p  : padding,
   pt : padding-top,
   pr : padding-right,
   pb : padding-bottom,
   pl : padding-left,
   m  : margin,
   mt : margin-top,
   mr : margin-right,
   mb : margin-bottom,
   ml : margin-left
 */

@mixin responsive-space($type: null, $space-xs: null, $space-sm: null, $space-md: null, $space-lg: null, $space-xl: null) {

  @if ($type == 'p') {
    $type: 'padding';
  }
  @if ($type == 'pt') {
    $type: 'padding-top';
  }
  @if ($type == 'pr') {
    $type: 'padding-right';
  }
  @if ($type == 'pb') {
    $type: 'padding-bottom';
  }
  @if ($type == 'pl') {
    $type: 'padding-left';
  }

  @if ($type == 'b') {
    $type: 'margin';
  }
  @if ($type == 'mt') {
    $type: 'margin-top';
  }
  @if ($type == 'mr') {
    $type: 'margin-right';
  }
  @if ($type == 'mb') {
    $type: 'margin-bottom';
  }
  @if ($type == 'ml') {
    $type: 'margin-left';
  }

  @if ($space-xs != '') {
    #{$type}: $space-xs;
  }
  @if ($space-sm != '') {
    @include media-breakpoint-up(sm) {
      #{$type}: $space-sm;
    }
  }
  @if ($space-md != '') {
    @include media-breakpoint-up(md) {
      #{$type}: $space-md;
    }
  }
  @if ($space-lg != '') {
    @include media-breakpoint-up(lg) {
      #{$type}: $space-lg;
    }
  }
  @if ($space-xl != '') {
    @include media-breakpoint-up(xl) {
      #{$type}: $space-xl;
    }
  }
}
